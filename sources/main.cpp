#include <stdio.h>
#include "edge-impulse-sdk/classifier/ei_run_classifier.h"

// Callback function declaration
static int get_signal_data(size_t offset, size_t length, float *out_ptr);

// Raw features copied from test sample (Edge Impulse > Model testing)
static float input_buf[EI_CLASSIFIER_DSP_INPUT_FRAME_SIZE] = {
    /* Paste your raw features here! */ 
0xbbaea5, 0xbbafa6, 0xbcb1a7, 0xbcb2a8, 0xbcb2a8, 0xbdb2a9, 0xbfb3a9, 0xc0b3aa, 0xc0b3ab, 0xc1b4ac, 0xc0b4ac, 0xc0b5ad, 0xc0b6ad, 0xc1b7ae, 0xc1b7af, 0xc1b6b0, 0xc1b8b1, 0xc2b9b1, 0xc3b9b2, 0xc4bbb4, 0xc4bbb6, 0xc4bbb6, 0xc4bbb6, 0xc5bcb7, 0xc5bcb7, 0xc6bdb8, 0xc6bdb8, 0xc6bdb8, 0xc6bdb8, 0xc6bdb9, 0xc6bdba, 0xc6bdba, 0xc7bdba, 0xc6bcba, 0xc6bcba, 0xc6bcba, 0xc6bdba, 0xc6bdba, 0xc6bcba, 0xc5bcba, 0xc5bdb9, 0xc6bdb8, 0xc5bcb7, 0xc4bdb7, 0xc4bcb8, 0xc3bcb7, 0xc4bbb6, 0xc3bab5, 0xbcafa6, 0xbcb0a7, 0xbcb1a8, 0xbcb2a9, 0xbdb3aa, 0xbeb3aa, 0xbfb3aa, 0xc0b4ab, 0xc1b4ac, 0xc1b4ad, 0xc1b6ad, 0xc0b7ae, 0xc1b6ae, 0xc1b7ae, 0xc2b8af, 0xc2b7b0, 0xc2b8b1, 0xc2b9b2, 0xc3bab3, 0xc4bbb4, 0xc5bcb6, 0xc5bcb7, 0xc5bcb7, 0xc6bdb8, 0xc6bdb8, 0xc6bdb8, 0xc7beb9, 0xc7beb9, 0xc7bdba, 0xc7bdbb, 0xc7bdbb, 0xc7bdbb, 0xc7bdbb, 0xc7bdbb, 0xc7bdbb, 0xc7bdbb, 0xc7bdbb, 0xc7bdbb, 0xc7bdbb, 0xc6bdba, 0xc6bcba, 0xc6bcba, 0xc6bcba, 0xc5bcba, 0xc5bcb9, 0xc4bcb9, 0xc4bab9, 0xc4bab7, 0xbcb0a8, 0xbeb0a8, 0xbeb1a8, 0xbeb3a9, 0xbfb3aa, 0xc0b3aa, 0xc1b4ab, 0xc1b4ab, 0xc1b4ac, 0xc2b5ad, 0xc2b6ad, 0xc2b6ae, 0xc2b7ae, 0xc2b8af, 0xc2b8af, 0xc3b9b0, 0xc3b8b1, 0xc3b9b3, 0xc3b9b3, 0xc5bcb5, 0xc5bcb6, 0xc6bdb7, 0xc6bdb8, 0xc6bdb8, 0xc7beb8, 0xc7beb8, 0xc7beb9, 0xc7beb9, 0xc8bfba, 0xc7beba, 0xc7bdbb, 0xc8bebb, 0xc8bebc, 0xc8bebc, 0xc8bebc, 0xc8bebc, 0xc8bebc, 0xc7bdbb, 0xc7bdbb, 0xc7bdbb, 0xc7bdbb, 0xc7bdbb, 0xc6bcba, 0xc6bcba, 0xc6bcba, 0xc5bcba, 0xc5bbb9, 0xc5bbb8, 0xbeb1a9, 0xbfb2a9, 0xbfb2a9, 0xc0b3aa, 0xc0b3aa, 0xc1b4ab, 0xc1b4ab, 0xc2b5ac, 0xc2b5ac, 0xc3b6ad, 0xc3b6ae, 0xc4b7af, 0xc4b7af, 0xc3b9b0, 0xc3b9b0, 0xc3b9b0, 0xc4bab1, 0xc4bab2, 0xc5bab3, 0xc6bbb5, 0xc6bcb6, 0xc7bcb7, 0xc7beb8, 0xc7beb9, 0xc7beb9, 0xc8bfba, 0xc8bfba, 0xc8bfba, 0xc8bfbb, 0xc8bfbc, 0xc8bebc, 0xc8bebc, 0xc8bebc, 0xc8bebc, 0xc8bebc, 0xc9bfbd, 0xc8bebc, 0xc8bebc, 0xc7bdbb, 0xc8bebc, 0xc7bebc, 0xc7bdbb, 0xc6bcba, 0xc5bbb8, 0xc6bcba, 0xc6bcba, 0xc6bcba, 0xc5bcb9, 0xbeb1a9, 0xbfb2aa, 0xbfb2a9, 0xc0b3aa, 0xc1b4ab, 0xc1b4ab, 0xc1b4ac, 0xc2b5ac, 0xc2b5ac, 0xc3b6ad, 0xc3b6ae, 0xc4b7af, 0xc5b8b0, 0xc5b8b0, 0xc4b9b1, 0xc4bab1, 0xc4bab1, 0xc4bab2, 0xc5bbb4, 0xc6bbb5, 0xc7bcb7, 0xc8bdb9, 0xc7beb9, 0xc7beb9, 0xc8beba, 0xc8bfba, 0xc8bfba, 0xc9c0bb, 0xc9bfbc, 0xc9bfbd, 0xc9bfbd, 0xc9bfbd, 0xc9bfbd, 0xc9bfbd, 0xc9bfbd, 0xc9bfbd, 0xc8bebd, 0xc8bebd, 0xc8bebc, 0xc8bebc, 0xc8bebc, 0xc7bdbb, 0xc7bdbb, 0xc7bdbb, 0xc7bdbb, 0xc7bdbb, 0xc6bcba, 0xc6bcb9, 0xbeb1a9, 0xbfb2aa, 0xc0b3aa, 0xc0b3aa, 0xc1b4ab, 0xc1b4ab, 0xc1b4ab, 0xc1b4ab, 0xc2b5ac, 0xc3b6ad, 0xc4b7ae, 0xc4b7af, 0xc5b8b0, 0xc5b8b0, 0xc4b9b1, 0xc4bab1, 0xc5bab2, 0xc5bab2, 0xc5bbb3, 0xc5bbb4, 0xc7bcb6, 0xc8bdb8, 0xc8bdb9, 0xc8beba, 0xc8bfba, 0xc8bfba, 0xc9c0bb, 0xc9c0bb, 0xc9bfbc, 0xc9bfbd, 0xc9bfbd, 0xc9bfbd, 0xc9bfbd, 0xc9bfbd, 0xc9bfbd, 0xc9bfbd, 0xc9bfbd, 0xc8bfbd, 0xc8bebd, 0xc8bebc, 0xc8bebc, 0xc8bebc, 0xc8bebc, 0xc7bdbb, 0xc7bdbb, 0xc7bdbb, 0xc6bcba, 0xc6bcba, 0xbeb1a9, 0xbeb1a9, 0xbfb2a9, 0xbfb2a9, 0xc0b3aa, 0xc0b3aa, 0xbfb3aa, 0xc0b3aa, 0xc0b3aa, 0xc2b5ac, 0xc3b6ad, 0xc4b7ae, 0xc5b8b0, 0xc5b8b0, 0xc6b9b1, 0xc6bab2, 0xc6bab2, 0xc5bbb2, 0xc6bbb3, 0xc6bbb5, 0xc7bcb6, 0xc8bdb7, 0xc9beb9, 0xc8beb9, 0xc8bfba, 0xc9c0bb, 0xc9c0bb, 0xc9c0bb, 0xc9bfbd, 0xc9bfbd, 0xc9bfbd, 0xcac0be, 0xcac0be, 0xcac0bd, 0xcac0bd, 0xc9bfbd, 0xc9bfbd, 0xc9bfbd, 0xc8bebe, 0xc8bfbd, 0xc8bfbd, 0xc8bebc, 0xc8bebc, 0xc8bebc, 0xc7bdbb, 0xc7bdbb, 0xc7bdbb, 0xc6bcba, 0xbdb0a8, 0xbdb0a7, 0xbdb0a7, 0xbeb1a8, 0xbfb2a9, 0xc0b2a9, 0xc0b2a9, 0xc0b2a9, 0xc0b3aa, 0xc1b4ab, 0xc2b5ac, 0xc3b6ae, 0xc4b7af, 0xc5b9b1, 0xc7b9b1, 0xc7bab2, 0xc7bab2, 0xc7bbb3, 0xc6bbb4, 0xc6bcb5, 0xc7bcb6, 0xc8bdb7, 0xc9beb8, 0xc8bfb8, 0xc8c0ba, 0xc9c0bb, 0xcac1bc, 0xc9c0bb, 0xcac0bc, 0xcac0be, 0xcac0be, 0xcac0be, 0xcac0be, 0xcac0be, 0xcac0be, 0xcac0be, 0xcac0be, 0xc9bfbe, 0xc9bfbe, 0xc9bfbe, 0xc9bfbe, 0xc9bfbd, 0xc8bebd, 0xc8bebd, 0xc8bebd, 0xc8bebc, 0xc7bdbb, 0xc7bdbb, 0xbbafa6, 0xbcafa6, 0xbdb0a7, 0xbeb1a8, 0xbeb1a8, 0xbfb2a9, 0xc0b2a9, 0xc0b3aa, 0xc0b4aa, 0xc1b4ab, 0xc2b5ac, 0xc3b6ad, 0xc3b6ae, 0xc5b8b0, 0xc6b9b1, 0xc7bab2, 0xc7bbb2, 0xc6bcb3, 0xc6bcb3, 0xc7bcb5, 0xc7bcb6, 0xc8bdb7, 0xc9beb8, 0xc9beb8, 0xc9bfba, 0xc9c0bb, 0xcac1bc, 0xcac1bc, 0xcac0bd, 0xcac0be, 0xcac0be, 0xcac0be, 0xcbc1bf, 0xcac0bf, 0xcac0be, 0xcac0bf, 0xcac0bf, 0xcac0bf, 0xcac0bf, 0xc9c0be, 0xc9bfbe, 0xc9bfbe, 0xc9bfbe, 0xc8bfbe, 0xc7bfbc, 0xc8bebd, 0xc7bdbc, 0xc7bdbb, 0xbbaea5, 0xbcafa6, 0xbcafa7, 0xbdb0a8, 0xbeb1a8, 0xbfb1a9, 0xc0b2a9, 0xc1b3aa, 0xc1b3aa, 0xc1b4ab, 0xc2b5ab, 0xc3b5ad, 0xc3b6ae, 0xc5b8b0, 0xc6b9b1, 0xc7bab2, 0xc6bcb3, 0xc6bcb3, 0xc6bcb4, 0xc7bcb5, 0xc7bcb6, 0xc9beb8, 0xc9beb8, 0xc9bfb9, 0xc9c0ba, 0xcac1bc, 0xcac1bc, 0xcac1bc, 0xcac0be, 0xcac0be, 0xcac0be, 0xcbc1bf, 0xcbc1bf, 0xcbc1bf, 0xcac0bf, 0xcac0bf, 0xcac0bf, 0xcac0bf, 0xcac0bf, 0xc9c0bf, 0xc9c0bf, 0xcac0bf, 0xc9bfbe, 0xc8bfbd, 0xc8bebd, 0xc8bebd, 0xc8bebd, 0xc7bdbc, 0xbbaea5, 0xbbafa5, 0xbcafa6, 0xbeb0a7, 0xbfb1a8, 0xbfb1a8, 0xc0b2a9, 0xc1b3aa, 0xc2b4ab, 0xc2b4ab, 0xc2b5ac, 0xc3b5ae, 0xc3b6ae, 0xc5b8af, 0xc6b9b1, 0xc7bab2, 0xc7bbb3, 0xc7bbb3, 0xc7bcb4, 0xc7bcb6, 0xc8bdb7, 0xc8bdb7, 0xc9beb8, 0xcabfb9, 0xcac0bb, 0xcac1bc, 0xcac1bc, 0xcac1bc, 0xcac0be, 0xcac0be, 0xcac0be, 0xcac0be, 0xcbc1bf, 0xcbc1c0, 0xcbc1c0, 0xcbc1c0, 0xcbc1c0, 0xcac1c0, 0xcac0bf, 0xcac0bf, 0xcac0bf, 0xcac0bf, 0xc9bfbe, 0xc9bfbe, 0xc8bebd, 0xc8bebd, 0xc8bebd, 0xc7bdbc, 0xbaada5, 0xbaada5, 0xbcafa6, 0xbeb0a7, 0xbeb0a7, 0xbfb1a8, 0xc0b2a9, 0xc0b2a9, 0xc1b3ab, 0xc2b3ac, 0xc2b3ac, 0xc2b5ad, 0xc2b5ad, 0xc4b7af, 0xc6b9b1, 0xc7bab2, 0xc8bab2, 0xc7bbb3, 0xc6bcb5, 0xc7bcb6, 0xc7bcb6, 0xc8bdb7, 0xc9beb8, 0xcabfb9, 0xcac0bb, 0xcac1bc, 0xcac0bc, 0xcbc0be, 0xcbc0be, 0xcac0be, 0xcac0be, 0xcac0be, 0xcac0bf, 0xcbc1c0, 0xcbc1c0, 0xcbc1c0, 0xcbc1c0, 0xcac0bf, 0xcac0bf, 0xcac0bf, 0xcac0bf, 0xcac0bf, 0xc9bfbe, 0xc9bfbe, 0xc8bebd, 0xc8bebd, 0xc8bebd, 0xc6bebc, 0xb9aca3, 0xb9aca3, 0xbaada5, 0xbcafa7, 0xbdafa7, 0xbeb1a7, 0xbfb1a9, 0xc0b2a9, 0xc0b2aa, 0xc1b2aa, 0xc2b3ab, 0xc2b5ad, 0xc2b5ad, 0xc3b6ae, 0xc5b8b0, 0xc6b9b1, 0xc7bab2, 0xc7bab2, 0xc6bbb4, 0xc7bcb6, 0xc7bcb6, 0xc7bcb6, 0xc8bdb7, 0xc8bdb9, 0xc9beba, 0xc9c0bb, 0xc9bfbb, 0xcabfbc, 0xcac0bd, 0xcac0bd, 0xc9bfbd, 0xc9bfbd, 0xcac0be, 0xcac0be, 0xcac0bf, 0xcac0bf, 0xcac0bf, 0xcac0bf, 0xc9c1bf, 0xc9bfbe, 0xc9bfbe, 0xc9bfbe, 0xc9bfbe, 0xc8bfbe, 0xc8bfbd, 0xc7bebd, 0xc7bfbd, 0xc6bebc, 0xb7aaa1, 0xb8aba2, 0xb9aca3, 0xbbada5, 0xbbada6, 0xbcafa6, 0xbdafa7, 0xbeb0a7, 0xbfb1a8, 0xc0b1a9, 0xc0b2aa, 0xc0b3ab, 0xc1b4ac, 0xc1b4ac, 0xc2b5ad, 0xc4b7af, 0xc6b9b1, 0xc6b9b1, 0xc5bab3, 0xc5bab4, 0xc5bab4, 0xc6bbb5, 0xc6bbb6, 0xc7bcb6, 0xc7bcb8, 0xc8bdb9, 0xc8beba, 0xc8beba, 0xc8bfba, 0xc8bfbb, 0xc8bebc, 0xc8bebc, 0xc8bebc, 0xc9bfbd, 0xc9bfbe, 0xc9bfbe, 0xc9bfbe, 0xc9bfbe, 0xc9bfbe, 0xc8bebe, 0xc9bebd, 0xc8bfbe, 0xc8bebf, 0xc7bebf, 0xc7bdbe, 0xc6bdbd, 0xc6bdbd, 0xc6bdbd, 0xb5a8a0, 0xb6a9a1, 0xb7aaa1, 0xb9aba3, 0xbaaba3, 0xbaada3, 0xbbada4, 0xbbada4, 0xbdafa5, 0xbeafa7, 0xbeafa8, 0xbfb0a9, 0xbfb2aa, 0xbfb2aa, 0xc0b3ab, 0xc2b5ad, 0xc4b7af, 0xc4b7af, 0xc4b8b0, 0xc3b9b1, 0xc4b9b2, 0xc4b9b3, 0xc5bab4, 0xc6bab4, 0xc6bbb5, 0xc6bbb6, 0xc6bcb7, 0xc6bdb8, 0xc6bdb9, 0xc7bdbb, 0xc7bdbb, 0xc7bdbb, 0xc7bdbb, 0xc7bdbc, 0xc8bebd, 0xc8bebd, 0xc8bebd, 0xc8bebf, 0xc8bebf, 0xc8bebe, 0xc8bebe, 0xc8bebf, 0xc7bebe, 0xc6bdbe, 0xc5bdbe, 0xc5bcbd, 0xc5bcbd, 0xc5bcbd, 0xb2a59d, 0xb3a69d, 0xb4a79e, 0xb6a8a0, 0xb7a9a0, 0xb7a9a0, 0xb8aaa1, 0xb9aba2, 0xbaaba3, 0xbaaca4, 0xbbada5, 0xbcaea7, 0xbcafa7, 0xbdb0a8, 0xbdb0a8, 0xbeb1a9, 0xc1b4ac, 0xc2b5ad, 0xc2b5ad, 0xc2b6ae, 0xc1b6af, 0xc1b7b1, 0xc2b7b1, 0xc3b8b2, 0xc4b9b3, 0xc4b9b2, 0xc4b9b3, 0xc4b9b4, 0xc4bab6, 0xc5bab9, 0xc5bbb9, 0xc5bbb9, 0xc5bbb9, 0xc5bbba, 0xc6bcbb, 0xc6bcbc, 0xc6bcbd, 0xc6bcbd, 0xc6bdbe, 0xc5bdbe, 0xc5bcbd, 0xc5bcbd, 0xc5bcbd, 0xc5bcbd, 0xc4bbbc, 0xc4bbbc, 0xc4bbbc, 0xc4bbbc, 0xafa29a, 0xb0a39a, 0xb1a39a, 0xb2a49c, 0xb4a69c, 0xb4a69d, 0xb4a69d, 0xb5a79e, 0xb6a89f, 0xb6a99f, 0xb7a9a1, 0xb9aba2, 0xb9aba3, 0xb9aba3, 0xb9ada3, 0xbaada5, 0xbcafa7, 0xbeb1a9, 0xbfb2aa, 0xbeb3ab, 0xbeb3ad, 0xbeb3ad, 0xbfb4ae, 0xc0b5af, 0xc0b5af, 0xc1b6b0, 0xc1b6b0, 0xc1b5b1, 0xc1b7b2, 0xc1b7b5, 0xc2b8b6, 0xc2b8b6, 0xc3b9b7, 0xc3b9b8, 0xc3b9b9, 0xc4babb, 0xc4babb, 0xc3babb, 0xc4bbbc, 0xc3babb, 0xc3babb, 0xc3babc, 0xc3babb, 0xc3babb, 0xc3babb, 0xc3babb, 0xc3babb, 0xc2b9ba, 0xab9d95, 0xac9d95, 0xad9e94, 0xae9f95, 0xb1a096, 0xb2a198, 0xb2a299, 0xb2a399, 0xb3a49a, 0xb3a49b, 0xb4a69d, 0xb5a79e, 0xb5a79f, 0xb5a79f, 0xb6a7a0, 0xb6a8a0, 0xb6a9a1, 0xb8aba3, 0xbaaea5, 0xbaafa6, 0xbaafa7, 0xbbb0a9, 0xbcb1ab, 0xbdb2ac, 0xbdb2ac, 0xbdb2ac, 0xbdb2ac, 0xbcb2ad, 0xbdb3af, 0xbdb4b0, 0xbeb4b2, 0xbfb5b4, 0xc0b6b5, 0xc0b6b5, 0xc0b6b5, 0xc1b7b6, 0xc1b7b7, 0xc1b8b8, 0xc1b8b9, 0xc1b8b9, 0xc1b8b9, 0xc1b8b9, 0xc1b8b9, 0xc0b7b8, 0xc0b7b8, 0xc0b7b8, 0xbfb6b7, 0xc0b7b8, 0xa6978d, 0xa8978d, 0xa9988c, 0xaa988c, 0xac9a8e, 0xad9b8f, 0xae9c92, 0xae9d93, 0xaf9e94, 0xb09f96, 0xb0a097, 0xb0a299, 0xb1a299, 0xb1a399, 0xb2a29a, 0xb1a39a, 0xb1a49c, 0xb2a59d, 0xb4a79f, 0xb5aaa1, 0xb5aba3, 0xb6aba5, 0xb7aca6, 0xb8ada7, 0xb9aea7, 0xb9aea8, 0xb8aea8, 0xb7afa9, 0xb8afaa, 0xb9afab, 0xb9b0ad, 0xbbb1af, 0xbbb1af, 0xbbb1b0, 0xbcb2b1, 0xbcb2b0, 0xbdb3b1, 0xbdb3b2, 0xbdb3b2, 0xbdb3b3, 0xbdb3b3, 0xbdb3b3, 0xbdb3b3, 0xbdb3b3, 0xbcb3b3, 0xbdb3b3, 0xbcb3b3, 0xbbb3b2, 0x9f8f84, 0xa18f85, 0xa19085, 0xa39184, 0xa59286, 0xa69488, 0xa79589, 0xa8968a, 0xa9978c, 0xa9978c, 0xaa978c, 0xaa9a90, 0xaa9b96, 0xaa9d99, 0xaa9e9a, 0xaa9e99, 0xa99d96, 0xaa9c93, 0xad9f96, 0xada29a, 0xaea39b, 0xb0a49d, 0xb0a59e, 0xb1a69f, 0xb1a69f, 0xb1a7a0, 0xb1a7a1, 0xb1a8a2, 0xb1a8a2, 0xb2a8a3, 0xb2a9a4, 0xb3aaa6, 0xb5aba8, 0xb5aba9, 0xb7adab, 0xb9afad, 0xb8afad, 0xb9afad, 0xb9afae, 0xb9afad, 0xb9afae, 0xbab0ae, 0xbab0ae, 0xb9afad, 0xb9afad, 0xb9afae, 0xb9afad, 0xb8aead, 0xbdb0a8, 0xbeb1a9, 0xbeb1a9, 0xbeb1a9, 0xbeb1a9, 0xbfb2a9, 0xbfb2a9, 0xbfb2a9, 0xbeb0a7, 0xbdb1a9, 0xbdb1ae, 0xbeaba1, 0xc1a588, 0xc4a377, 0xc4a378, 0xc1a683, 0xbdaa99, 0xbaafad, 0xbbb2ad, 0xbcb1a8, 0xbbb2aa, 0xbcb3aa, 0xbcb2aa, 0xbbb2ab, 0xbbb2aa, 0xbbb2ab, 0xbbb3ac, 0xbcb3ad, 0xbcb3ae, 0xbcb4af, 0xbcb4af, 0xbdb4b0, 0xbdb4b1, 0xbdb4b2, 0xbab0ad, 0xb2a7a4, 0xb4a9a6, 0xb6aca8, 0xb6aca8, 0xb6aca8, 0xb6aca8, 0xb6aca9, 0xb6aca9, 0xb6aca9, 0xb6aca9, 0xb6aca9, 0xb6aca8, 0xb5aca8, 0xc8beb9, 0xcabfba, 0xcbc1bb, 0xccc2bc, 0xcdc3bd, 0xcfc4be, 0xcfc5bf, 0xcfc6be, 0xd0c9c5, 0xd0c2b8, 0xd6af78, 0xdca33b, 0xdfa01d, 0xe09f13, 0xe0a014, 0xe0a31c, 0xdfa731, 0xdbb162, 0xd5c1a7, 0xd0cbc8, 0xd1cac2, 0xd1cac4, 0xd1cbc4, 0xd1cac4, 0xd1cac4, 0xd1cbc5, 0xd2cbc5, 0xd2cbc5, 0xd2cbc5, 0xd2cbc5, 0xd2cbc5, 0xd2cbc6, 0xd2cac7, 0xd2cac7, 0xd0c8c5, 0xc2b8b3, 0xb3a79f, 0xafa299, 0xb1a49c, 0xb2a59d, 0xb1a59d, 0xb2a59d, 0xb2a59d, 0xb2a69e, 0xb2a69e, 0xb1a79e, 0xb1a89f, 0xb2a79f, 0xc4b9b4, 0xc5bab5, 0xc6bbb5, 0xc8bdb6, 0xc9beb7, 0xcbc0ba, 0xccc2ba, 0xcdc6c2, 0xceb79f, 0xd59839, 0xda9306, 0xdd9602, 0xdd9806, 0xde9a07, 0xde9b06, 0xde9c07, 0xde9d04, 0xdf9f02, 0xdea31c, 0xd5b681, 0xcec8c5, 0xcec7c0, 0xcfc8c2, 0xcfc8c2, 0xcfc8c2, 0xcfc8c2, 0xcfc8c2, 0xcfc8c2, 0xcfc8c2, 0xcfc8c2, 0xcfc8c2, 0xd0c9c3, 0xd1c9c5, 0xd1c9c6, 0xd1c9c6, 0xd3cbc9, 0xcec6c1, 0xbcb2ab, 0xb1a49b, 0xb1a39b, 0xb2a59d, 0xb3a69e, 0xb3a69e, 0xb3a69e, 0xb4a79f, 0xb3a79e, 0xb3a79f, 0xb4a79f, 0xc6bbb5, 0xc7bcb6, 0xc7bcb6, 0xc9beb8, 0xc9beb8, 0xcabfb8, 0xcbc3c0, 0xcdb59d, 0xd38f26, 0xd88d03, 0xda9308, 0xdc9406, 0xdd9506, 0xde9805, 0xdf9a06, 0xde9b07, 0xdf9c07, 0xde9e08, 0xdf9f03, 0xdea00e, 0xd5b684, 0xcfcac7, 0xd0c9c1, 0xd0c9c3, 0xd0c9c3, 0xd0c9c3, 0xd0c9c3, 0xd0c9c3, 0xd0c9c3, 0xd0c9c3, 0xd0c9c3, 0xd0c9c3, 0xd0c9c4, 0xd0c9c4, 0xd1c9c4, 0xd1c9c4, 0xd3cbc5, 0xd4cdc7, 0xc8bfba, 0xb9ada5, 0xb3a69d, 0xb5a89f, 0xb5a8a0, 0xb5a8a0, 0xb5a89f, 0xb5a8a0, 0xb6a8a0, 0xb5a8a0, 0xc6bbb5, 0xc7bcb6, 0xc8bdb7, 0xc9beb8, 0xc9beb8, 0xcac0bb, 0xcbbcb2, 0xd19237, 0xd58603, 0xd98e07, 0xda8f05, 0xdb9105, 0xdc9304, 0xdd9505, 0xe09a07, 0xdf9c08, 0xde9b06, 0xde9c06, 0xde9d07, 0xde9e03, 0xdca220, 0xd2bfa6, 0xcfcac7, 0xd0c9c2, 0xd0c9c3, 0xd1cac4, 0xd0c9c3, 0xd0c9c3, 0xd0c9c3, 0xd0c9c3, 0xd0c9c3, 0xd0c9c3, 0xd0c9c4, 0xd0c9c3, 0xd1cac4, 0xd1cac4, 0xd1cac4, 0xd0c9c3, 0xd3ccc6, 0xd1c9c5, 0xc3b9b3, 0xb3a79e, 0xb1a39a, 0xb3a59c, 0xb4a69e, 0xb4a79d, 0xb4a69d, 0xb4a69c, 0xc7bcb6, 0xc8bdb7, 0xc8beb7, 0xcabfb9, 0xcabeb7, 0xcac3c2, 0xcda372, 0xd38006, 0xd5860a, 0xd88904, 0xd88b04, 0xda8c04, 0xdb8f04, 0xdb9104, 0xde9706, 0xdf9b07, 0xde9a06, 0xde9b07, 0xde9c06, 0xde9c09, 0xdd9c01, 0xd8ae5c, 0xcfc9c9, 0xd0c9c1, 0xd0c9c2, 0xd0c9c3, 0xd0c9c3, 0xd0c9c3, 0xd0c9c3, 0xd0c9c3, 0xd0c9c3, 0xd0c9c3, 0xd0c9c4, 0xd0c9c3, 0xd0c9c4, 0xd0c9c4, 0xd1cac4, 0xd1cac4, 0xd0c9c3, 0xd1cac4, 0xd3ccc7, 0xcdc5bf, 0xbdb2aa, 0xb2a39a, 0xb1a399, 0xb3a59b, 0xb2a59b, 0xb1a49a, 0xc7bcb6, 0xc8bdb7, 0xc9beb8, 0xc9beb8, 0xcabfb9, 0xcabdb8, 0xcf8e38, 0xd07b03, 0xd38109, 0xd68505, 0xd88805, 0xd98904, 0xd98b04, 0xd98b04, 0xdb9104, 0xdc9404, 0xdc9705, 0xdd9906, 0xdc9705, 0xdb9806, 0xdc9b02, 0xdaa22a, 0xd1c3b6, 0xd0cac6, 0xd1cac3, 0xd1cac4, 0xd0c9c3, 0xd0c9c3, 0xd1c9c3, 0xd0c9c3, 0xd0c9c3, 0xd1cac4, 0xd1cac4, 0xd0c9c3, 0xd0c9c3, 0xd0c9c3, 0xd0c9c3, 0xd0c9c3, 0xd0c9c3, 0xd0c9c3, 0xd0c9c3, 0xd2cbc5, 0xd2cbc5, 0xcac1ba, 0xb9ada5, 0xafa296, 0xafa297, 0xb1a399, 0xc9beb8, 0xc9beb8, 0xcabfb9, 0xcabfb8, 0xcbc2bf, 0xccb6a5, 0xcf821d, 0xd17a06, 0xd58106, 0xd78406, 0xd68405, 0xd88505, 0xd88605, 0xd98904, 0xda8d04, 0xda9004, 0xdb9205, 0xdb9305, 0xd99204, 0xda9405, 0xda9704, 0xdb9c14, 0xd4bfa1, 0xd0ccc9, 0xd2cac2, 0xd1cac4, 0xd1cac4, 0xd1cac4, 0xd1cac4, 0xd1cac4, 0xd0c9c3, 0xd1cac4, 0xd1cac4, 0xd0c9c3, 0xd1cac3, 0xd0c9c3, 0xd0c9c3, 0xd0c9c3, 0xd1cac3, 0xd0c9c2, 0xd0c9c3, 0xd0c9c3, 0xd0c9c3, 0xd2cbc5, 0xd1cac5, 0xc4bab3, 0xb2a49b, 0xaea096, 0xcbc0b9, 0xcbc0ba, 0xccc1bb, 0xccc1ba, 0xccc4c2, 0xcdb49c, 0xcf7f17, 0xd17a07, 0xd48006, 0xd58106, 0xd68206, 0xd78306, 0xd88505, 0xd88704, 0xd88904, 0xd98b04, 0xda8d04, 0xd98f04, 0xd99005, 0xd99205, 0xd99505, 0xdb9b13, 0xd5be9a, 0xd2cecb, 0xd4ccc3, 0xd4cdc5, 0xd3ccc5, 0xd3ccc5, 0xd3ccc5, 0xd3ccc6, 0xd3ccc6, 0xd3ccc6, 0xd3ccc6, 0xd3ccc6, 0xd3ccc6, 0xd3ccc6, 0xd3ccc6, 0xd3ccc6, 0xd3ccc5, 0xd3ccc4, 0xd3ccc5, 0xd3ccc6, 0xd3ccc6, 0xd3ccc6, 0xd3ccc6, 0xd5cfc8, 0xd0c9c3, 0xcdc4be, 0xc8bdb7, 0xc9beb8, 0xcabfb9, 0xcbbfb8, 0xcbc2bf, 0xccb29c, 0xd18218, 0xd17a06, 0xd27c06, 0xd37e05, 0xd47f05, 0xd47f05, 0xd68205, 0xd88505, 0xd88604, 0xd88904, 0xd98b04, 0xd88c04, 0xd88e04, 0xd89105, 0xd99505, 0xda9b18, 0xd4bda0, 0xd1ccc9, 0xd2cac2, 0xd2cbc3, 0xd2cbc3, 0xd2cbc4, 0xd2cbc3, 0xd2cbc3, 0xd2cbc4, 0xd2cbc4, 0xd2cbc5, 0xd2cbc5, 0xd2cbc5, 0xd2cbc5, 0xd2cbc5, 0xd2cbc6, 0xd2cbc5, 0xd2cbc5, 0xd2cbc5, 0xd2cbc4, 0xd2cbc4, 0xd2cbc5, 0xd2cbc5, 0xd1cac4, 0xd2cbc5, 0xd3ccc6, 0xc7bcb6, 0xc7bdb7, 0xc9bdb7, 0xcabeb7, 0xcabfba, 0xcbb6a8, 0xcf8428, 0xd07805, 0xd27c07, 0xd37d06, 0xd47e05, 0xd37d05, 0xd48005, 0xd68306, 0xd68305, 0xd68505, 0xd78805, 0xd78a04, 0xd78d04, 0xd89006, 0xda9404, 0xd99d29, 0xd2c1b0, 0xd0c8c3, 0xd1c8c0, 0xd1c9c2, 0xd1c9c2, 0xd1cac2, 0xd2cbc3, 0xd2cbc3, 0xd2cbc2, 0xd2cbc3, 0xd2cbc5, 0xd2cbc3, 0xd2cbc5, 0xd2cbc4, 0xd2cbc4, 0xd1cac4, 0xd1cac3, 0xd1cac3, 0xd1cac2, 0xd1cac3, 0xd1cac4, 0xd1cac3, 0xd1cac4, 0xd0cac4, 0xd0c9c3, 0xd0c9c3, 0xc7bbb5, 0xc7bcb5, 0xc9bcb5, 0xc8bbb5, 0xc8bcb4, 0xc9bcb8, 0xcd9049, 0xd07707, 0xd17a09, 0xd27c06, 0xd37d06, 0xd37d05, 0xd37e05, 0xd48005, 0xd58105, 0xd58405, 0xd58605, 0xd68904, 0xd78c04, 0xd78f07, 0xd89202, 0xd7a551, 0xcfc5c0, 0xcfc5bc, 0xd0c6be, 0xd0c7bf, 0xd0c7c0, 0xd1c8c0, 0xd1c8c1, 0xd1c9c1, 0xd1cac2, 0xd1cac2, 0xd1cac2, 0xd1cac2, 0xd1cac3, 0xd1cac3, 0xd1cac2, 0xd1cac2, 0xd1cac2, 0xd0c9c1, 0xd0c9c2, 0xd1cac2, 0xd1cac3, 0xd1cac3, 0xd0c9c2, 0xd0c9c2, 0xd0c9c2, 0xcfc8c1, 0xc3b6b0, 0xc4b7b0, 0xc5b8b0, 0xc5b6af, 0xc4b6ad, 0xc6bab6, 0xcaa582, 0xd07b12, 0xd07909, 0xd17a07, 0xd07906, 0xd17b06, 0xd17a06, 0xd37e05, 0xd48005, 0xd58205, 0xd58505, 0xd58705, 0xd68b05, 0xd68e05, 0xd79311, 0xd3b38e, 0xcfc2bd, 0xcfc1b7, 0xcfc2b9, 0xcfc3ba, 0xcfc5bb, 0xcec5bc, 0xcec6bd, 0xcfc6bd, 0xcfc6be, 0xcfc7bf, 0xcfc7bf, 0xcec7bf, 0xcec8bf, 0xcfc8c0, 0xcfc8c0, 0xcfc8c0, 0xcfc8c0, 0xcfc8c0, 0xcec7bf, 0xcec7bf, 0xcec7c0, 0xcec7c0, 0xcec7bf, 0xcec7bf, 0xcec7bf, 0xcec7bf, 0xc3b6af, 0xc3b5ae, 0xc3b5ae, 0xc4b5ae, 0xc4b4ac, 0xc5b3ab, 0xbea8a0, 0xc98943, 0xd17903, 0xce7907, 0xcf7906, 0xd07906, 0xd07906, 0xd17a06, 0xd27e05, 0xd48005, 0xd58206, 0xd48506, 0xd58906, 0xd68c03, 0xd4a45a, 0xd0beb6, 0xd0beb3, 0xd0bfb5, 0xcfc0b7, 0xcfc2b8, 0xd0c3ba, 0xcfc4bb, 0xcec5bc, 0xcec5bc, 0xcec5bc, 0xcec5bc, 0xcec5bd, 0xcec6bd, 0xcec6bd, 0xcec6be, 0xcec7bf, 0xcec7bf, 0xcec7bf, 0xcec7bf, 0xcec7bf, 0xcec7bf, 0xcec7bf, 0xcec7bf, 0xcec7bf, 0xcec7bf, 0xcdc6be, 0xcec7bf, 0xc3b5ad, 0xc4b5ad, 0xc5b4ac, 0xc6b4ac, 0xc7b4ab, 0xbba499, 0xb2978d, 0xb89683, 0xc88131, 0xd07806, 0xd07906, 0xd07907, 0xcf7806, 0xce7806, 0xd07a06, 0xd27d06, 0xd48206, 0xd48604, 0xd68b05, 0xd2943a, 0xcdad99, 0xd2beb0, 0xd1beb0, 0xd0bfb3, 0xd0bfb6, 0xd0c1b7, 0xd0c2b8, 0xd0c3ba, 0xcfc4bb, 0xcec5bb, 0xcec5bc, 0xcec5bc, 0xcec5bc, 0xcec5bc, 0xcec5bc, 0xcec5bc, 0xcec5bd, 0xcdc6bd, 0xcdc6be, 0xcdc6be, 0xcdc6be, 0xcdc6be, 0xcdc6be, 0xcec7bf, 0xcec7bf, 0xcdc6be, 0xcdc6be, 0xcdc6be, 0xc2b4ab, 0xc3b3ab, 0xc5b3aa, 0xc7b3aa, 0xc5afa6, 0xb4998d, 0xb19183, 0xb09080, 0xb3896c, 0xc37b30, 0xce770b, 0xd27b05, 0xd27d06, 0xd17e07, 0xd27e06, 0xd48105, 0xd58305, 0xd4840c, 0xce8e38, 0xc69974, 0xcbab94, 0xd4bba9, 0xd2bdad, 0xd1beb0, 0xd1bfb4, 0xd2c1b7, 0xd1c2b7, 0xd0c3b9, 0xd0c3ba, 0xcfc4ba, 0xcec4bb, 0xcec5bc, 0xcec5bc, 0xcec5bc, 0xcec5bc, 0xcec5bc, 0xcdc4bb, 0xccc5bc, 0xccc5bd, 0xccc5bd, 0xcdc6bd, 0xccc5bd, 0xccc5bd, 0xcdc6be, 0xcdc6be, 0xcdc6be, 0xcdc6be, 0xcdc6be, 0xc3b4ac, 0xc4b3ab, 0xc5b3aa, 0xc6b1a8, 0xc7b0a5, 0xb99e91, 0xae8e7c, 0xae8873, 0xad8164, 0xac7653, 0xb76a2f, 0xc36811, 0xc86a08, 0xca6b07, 0xca6d07, 0xc96f09, 0xc87517, 0xc68038, 0xc48c5d, 0xc99e79, 0xd1b29b, 0xd3b9a5, 0xd2bcab, 0xd1beb0, 0xd1bfb3, 0xd1c0b5, 0xd1c1b7, 0xd0c3b8, 0xd0c3ba, 0xcfc3ba, 0xcec4ba, 0xcdc4bb, 0xcdc4bb, 0xcdc4bb, 0xcdc4bb, 0xcdc4bb, 0xcdc4bb, 0xccc4bb, 0xcbc4bc, 0xccc5bd, 0xccc5bd, 0xccc5bd, 0xccc5bd, 0xccc5bd, 0xccc5bd, 0xccc5bd, 0xccc5bd, 0xccc5bd, 0xc3b3ab, 0xc4b2a9, 0xc6b2a9, 0xc6b1a7, 0xc7b0a4, 0xc6ac9f, 0xbb9d8c, 0xb28e76, 0xb18367, 0xb27a54, 0xb47142, 0xb6672f, 0xb75d22, 0xb75a1f, 0xba6221, 0xbe6f2e, 0xc17e42, 0xc58d5c, 0xcb9f78, 0xd0af93, 0xd1b59f, 0xd1b8a6, 0xd1bcab, 0xd0bdaf, 0xd0bfb1, 0xd0c0b5, 0xd0c0b6, 0xcfc1b6, 0xcfc3b7, 0xcfc3b9, 0xcfc3ba, 0xcec3ba, 0xcdc4ba, 0xcdc4bb, 0xcdc4bb, 0xcdc3ba, 0xcdc3ba, 0xcdc3ba, 0xcbc4ba, 0xcbc4bc, 0xcbc4bc, 0xcbc4bb, 0xcbc4bb, 0xcbc4bc, 0xcbc4bc, 0xcbc4bc, 0xcbc4bc, 0xcbc4bc, 0xc5b5ab, 0xc6b4aa, 0xc6b3aa, 0xc7b2a9, 0xc7b0a5, 0xc8afa2, 0xc8ad9e, 0xc6a895, 0xc2a089, 0xc1987a, 0xc1926e, 0xc28d64, 0xc38c5f, 0xc48e5f, 0xc79365, 0xc99a70, 0xcca27f, 0xcfab8d, 0xd0b199, 0xd0b39d, 0xd0b5a1, 0xd0b9a7, 0xd0bcac, 0xcfbdaf, 0xcfbeb2, 0xd0bfb4, 0xd0c0b6, 0xcec2b6, 0xcfc2b7, 0xcfc2b8, 0xcfc2b9, 0xcec2b9, 0xcdc3ba, 0xcdc3ba, 0xcdc3ba, 0xcdc3ba, 0xcdc3ba, 0xccc3ba, 0xcbc4ba, 0xcbc4ba, 0xcbc3bb, 0xcbc3bb, 0xcbc3bc, 0xcbc3bc, 0xcbc3bb, 0xcbc3bb, 0xcbc3bb, 0xcbc3bb, 0xc5b3aa, 0xc7b5ab, 0xc7b4ab, 0xc7b3aa, 0xc8b2a7, 0xc8b1a4, 0xc8afa0, 0xc9ae9e, 0xcaae9b, 0xcbad99, 0xccac97, 0xccab94, 0xccaa93, 0xcdab93, 0xcdab94, 0xcead96, 0xceae98, 0xcdb09b, 0xcdb29d, 0xceb4a2, 0xceb7a6, 0xcebaaa, 0xcebcac, 0xcebdaf, 0xcebdb2, 0xcfbeb4, 0xcec0b5, 0xcdc1b6, 0xcfc2b7, 0xcec1b8, 0xcfc2b9, 0xcdc3b9, 0xcdc3b9, 0xcdc3ba, 0xcdc3ba, 0xcdc3ba, 0xccc2ba, 0xcbc3ba, 0xcbc2b9, 0xcbc2b9, 0xcbc2b9, 0xcbc2ba, 0xcbc2b9, 0xcbc2ba, 0xcbc1ba, 0xcbc2bb, 0xcac1bb, 0xcbc1ba, 0xc2b1a8, 0xc4b2a8, 0xc4b2a8, 0xc4b1a7, 0xc5b0a6, 0xc6afa3, 0xc5aea1, 0xc6ad9f, 0xc7ab9d, 0xc8ab9a, 0xc8ab98, 0xc9ab97, 0xcaaa97, 0xcaab97, 0xcaab98, 0xcaac99, 0xcaae9c, 0xc9af9d, 0xcab1a1, 0xcbb4a5, 0xcbb6a8, 0xcbb8a9, 0xcbb9ac, 0xcbbbae, 0xcdbcb1, 0xccbdb2, 0xcbbdb2, 0xcbbeb4, 0xccbfb6, 0xccbfb6, 0xcbc0b6, 0xcac0b7, 0xcbc1b8, 0xcbc1b8, 0xcbc1b8, 0xcac0b8, 0xcac0b7, 0xcac0b7, 0xcac0b7, 0xc9bfb6, 0xc8bfb6, 0xc8bfb7, 0xc8bfb6, 0xc8bfb6, 0xc8bfb7, 0xc9c0b8, 0xc8bfb8, 0xc9c0b8, 0xc0b1a7, 0xc1b0a6, 0xc2b0a6, 0xc2b0a6, 0xc2b0a6, 0xc3afa4, 0xc4aea2, 0xc4ada1, 0xc6ada1, 0xc6ac9f, 0xc6ac9e, 0xc7ac9d, 0xc8ac9d, 0xc8ad9d, 0xc8ae9e, 0xc8ae9f, 0xc8afa1, 0xc8b1a2, 0xc8b2a4, 0xc8b4a6, 0xc8b5a8, 0xc9b7ab, 0xc9b9ae, 0xcab9ae, 0xcabbb0, 0xc9bcb1, 0xc9bdb1, 0xc9bdb2, 0xcabdb4, 0xcabeb5, 0xc9bfb5, 0xc9bfb5, 0xcac0b7, 0xc9bfb6, 0xc9bfb6, 0xc9bfb6, 0xc9bfb6, 0xc8beb5, 0xc8beb5, 0xc9bfb6, 0xc8beb7, 0xc8beb6, 0xc8bfb6, 0xc7beb5, 0xc7beb5, 0xc7beb5, 0xc7beb5, 0xc7beb5, 0xbfb1a8, 0xc0b0a7, 0xc0b0a6, 0xc1b0a6, 0xc2b0a6, 0xc2b0a6, 0xc4b0a5, 0xc4afa4, 0xc4afa3, 0xc5aea3, 0xc6afa2, 0xc6afa3, 0xc6afa2, 0xc7afa2, 0xc7afa2, 0xc7b0a3, 0xc7b1a4, 0xc8b1a4, 0xc7b2a6, 0xc7b5a8, 0xc7b6aa, 0xc8b6ac, 0xc8b7ad, 0xc7b8ad, 0xc8baaf, 0xc8bcb0, 0xc9bdb1, 0xc9bdb3, 0xcabdb4, 0xc9beb4, 0xc8beb5, 0xc8bfb6, 0xc9bfb6, 0xc8beb5, 0xc8beb5, 0xc8beb5, 0xc8beb5, 0xc8beb5, 0xc8beb5, 0xc8beb5, 0xc8beb6, 0xc8beb6, 0xc7beb5, 0xc7beb5, 0xc7beb5, 0xc7beb5, 0xc7beb5, 0xc6bdb5, 0xbeb0a7, 0xbfb1a8, 0xbfb0a7, 0xc0afa5, 0xc1afa5, 0xc2b0a6, 0xc3b1a7, 0xc3b0a6, 0xc3afa6, 0xc4afa6, 0xc5b0a6, 0xc5b0a6, 0xc6b0a5, 0xc6b0a5, 0xc5b0a5, 0xc6b1a6, 0xc6b1a6, 0xc6b1a7, 0xc6b2a9, 0xc7b4aa, 0xc6b5ab, 0xc6b5ab, 0xc5b7ac, 0xc6b8ad, 0xc7baae, 0xc7bbb0, 0xc8bbb1, 0xc8bbb2, 0xc7bdb3, 0xc7bdb3, 0xc7bdb4, 0xc8beb5, 0xc8beb5, 0xc8beb5, 0xc8beb5, 0xc8beb5, 0xc8beb5, 0xc7bdb4, 0xc7bdb4, 0xc6bdb4, 0xc6bdb5, 0xc6bdb5, 0xc6bdb4, 0xc5bcb5, 0xc6bdb4, 0xc6bdb4, 0xc6bdb4, 0xc6bdb4, 0xbdb0a7, 0xbdb0a7, 0xbeb0a6, 0xbeb0a5, 0xbfb0a5, 0xbfafa5, 0xc0afa5, 0xc0afa5, 0xc2b0a6, 0xc2b0a6, 0xc3b0a7, 0xc4b0a7, 0xc4b1a8, 0xc5b1a8, 0xc5b1a8, 0xc5b1a8, 0xc4b2a8, 0xc5b3a9, 0xc5b3a9, 0xc5b4aa, 0xc4b4a9, 0xc3b5aa, 0xc4b7ab, 0xc5b8ad, 0xc5b8ae, 0xc6b9b0, 0xc7bab1, 0xc6bbb1, 0xc6bdb2, 0xc7bdb3, 0xc7bdb3, 0xc7bdb4, 0xc8beb4, 0xc7bdb4, 0xc7bdb4, 0xc7bdb4, 0xc7bdb4, 0xc7bdb4, 0xc6bdb4, 0xc6bdb4, 0xc6bdb4, 0xc5bcb3, 0xc5bcb4, 0xc5bcb4, 0xc5bcb3, 0xc6bcb3, 0xc4bbb2, 0xc4bbb2, 0xbcafa6, 0xbdafa7, 0xbdafa6, 0xbdafa6, 0xbeb0a6, 0xbeafa4, 0xbeafa5, 0xbfb0a5, 0xc0b0a5, 0xc0afa5, 0xc1b0a6, 0xc2b1a7, 0xc2b1a7, 0xc3b1a7, 0xc3b2a8, 0xc3b2a8, 0xc4b2a8, 0xc3b2a8, 0xc3b3a9, 0xc2b3a9, 0xc1b4a9, 0xc2b5aa, 0xc2b6ab, 0xc3b7ac, 0xc3b7ae, 0xc5b8af, 0xc5bab0, 0xc5bbb1, 0xc6bcb2, 0xc6bcb2, 0xc6bcb2, 0xc6bcb2, 0xc6bcb3, 0xc6bcb2, 0xc6bcb3, 0xc6bcb3, 0xc6bcb3, 0xc5bcb3, 0xc4bcb3, 0xc5bcb2, 0xc5bcb2, 0xc5bcb3, 0xc5bcb3, 0xc4bbb2, 0xc4bbb2, 0xc4bbb2, 0xc4bbb2, 0xc3bab1, 0xbbaea5, 0xbcafa5, 0xbcafa6, 0xbcafa6, 0xbcafa6, 0xbdb0a5, 0xbdb0a5, 0xbeb0a5, 0xbdafa4, 0xbdb0a5, 0xbeb0a5, 0xbfafa5, 0xbfb0a5, 0xc1b0a6, 0xc1b0a6, 0xc2b1a7, 0xc1b2a7, 0xc0b1a6, 0xc0b2a7, 0xc0b3a7, 0xc0b3a8, 0xc0b4a8, 0xc1b5a9, 0xc0b6ab, 0xc1b7ad, 0xc2b8ae, 0xc3b9af, 0xc3bab0, 0xc4bab0, 0xc5bab0, 0xc5bbb1, 0xc5bbb1, 0xc5bbb1, 0xc5bbb2, 0xc6bbb2, 0xc5bbb2, 0xc5bbb2, 0xc4bbb2, 0xc3bbb1, 0xc3bbb1, 0xc4bcb1, 0xc4bcb1, 0xc4bbb1, 0xc4bbb1, 0xc3bab1, 0xc3bab0, 0xc3bab0, 0xc3bab0, 0xbaada4, 0xbaaea4, 0xbbaea5, 0xbbaea5, 0xbcafa5, 0xbcafa5, 0xbcafa5, 0xbcb0a4, 0xbcb0a4, 0xbcafa4, 0xbdafa4, 0xbdb0a5, 0xbdb0a5, 0xbeb0a5, 0xbfb1a6, 0xbfb2a7, 0xbfb1a6, 0xbfb1a6, 0xbfb1a6, 0xbfb2a6, 0xbfb3a7, 0xbfb4a8, 0xbfb4a9, 0xbfb5a9, 0xc0b6ac, 0xc1b7ad, 0xc2b8ae, 0xc2b8ae, 0xc3b9af, 0xc3b9af, 0xc3bab0, 0xc4bbb0, 0xc4bbb1, 0xc4bbb0, 0xc4bab0, 0xc4bab0, 0xc4bab0, 0xc3bbb0, 0xc3bbb0, 0xc3bbb0, 0xc3bbb0, 0xc3bbb0, 0xc3bbb0, 0xc3bab1, 0xc2b9b0, 0xc2b9af, 0xc1b9ae, 0xc1b9ae
};

int main(int argc, char **argv) {
    
    signal_t signal;            // Wrapper for raw input buffer
    ei_impulse_result_t result; // Used to store inference output
    EI_IMPULSE_ERROR res;       // Return code from inference

    // Calculate the length of the buffer
    size_t buf_len = sizeof(input_buf) / sizeof(input_buf[0]);

    // Make sure that the length of the buffer matches expected input length
    if (buf_len != EI_CLASSIFIER_DSP_INPUT_FRAME_SIZE) {
        printf("ERROR: The size of the input buffer is not correct.\r\n");
        printf("Expected %d items, but got %d\r\n", 
                EI_CLASSIFIER_DSP_INPUT_FRAME_SIZE, 
                (int)buf_len);
        return 1;
    }

    // Assign callback function to fill buffer used for preprocessing/inference
    signal.total_length = EI_CLASSIFIER_DSP_INPUT_FRAME_SIZE;
    signal.get_data = &get_signal_data;

    // Perform DSP pre-processing and inference
    res = run_classifier(&signal, &result, false);

    // Print return code and how long it took to perform inference
    printf("run_classifier returned: %d\r\n", res);
    printf("Timing: DSP %d ms, inference %d ms, anomaly %d ms\r\n", 
            result.timing.dsp, 
            result.timing.classification, 
            result.timing.anomaly);

    // Print the prediction results (object detection)
#if EI_CLASSIFIER_OBJECT_DETECTION == 1
    printf("Object detection bounding boxes:\r\n");
    for (uint32_t i = 0; i < EI_CLASSIFIER_OBJECT_DETECTION_COUNT; i++) {
        ei_impulse_result_bounding_box_t bb = result.bounding_boxes[i];
        if (bb.value == 0) {
            continue;
        }
        printf("  %s (%f) [ x: %u, y: %u, width: %u, height: %u ]\r\n", 
                bb.label, 
                bb.value, 
                bb.x, 
                bb.y, 
                bb.width, 
                bb.height);
    }

    // Print the prediction results (classification)
#else
    printf("Predictions:\r\n");
    for (uint16_t i = 0; i < EI_CLASSIFIER_LABEL_COUNT; i++) {
        printf("  %s: ", ei_classifier_inferencing_categories[i]);
        printf("%.5f\r\n", result.classification[i].value);
    }
#endif

    // Print anomaly result (if it exists)
#if EI_CLASSIFIER_HAS_ANOMALY == 1
    printf("Anomaly prediction: %.3f\r\n", result.anomaly);
#endif

    return 0;
}

// Callback: fill a section of the out_ptr buffer when requested
static int get_signal_data(size_t offset, size_t length, float *out_ptr) {
    for (size_t i = 0; i < length; i++) {
        out_ptr[i] = (input_buf + offset)[i];
    }

    return EIDSP_OK;
}